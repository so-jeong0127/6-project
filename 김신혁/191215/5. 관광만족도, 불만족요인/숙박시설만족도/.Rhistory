setwd('D:/6-project/김신혁/191215/5. 관광만족도, 불만족요인')
library(ggplot2)
library(reshape2)
setwd('D:/6-project/김신혁/191215/5. 관광만족도, 불만족요인')
unliked <- read.csv("여행불만족요인-국적별.csv", header=T)
unliked
unliked.df <- melt( unliked[, c("X", "여행정보를.얻기.어렵다", "관광정보가.정확하지.않다", "관광종사원이.불친절하다",
"안내표지판이.부정확하다", "식당과.음식이.불결하다", "음식이.입에.맞지.않는다", "물가가.비싸다",
"대중교통.이용이.불편하다", "택시기사.서비스가.불편하다")], id = "X")
ggplot(unliked.df)+
geom_bar(aes(x = X, y=value, fill = variable),
position = "fill", stat = "identity" )
unliked.df <- melt( unliked[, c("X", "여행정보를.얻기.어렵다", "관광정보가.정확하지.않다", "관광종사원이.불친절하다",
"안내표지판이.부정확하다", "식당과.음식이.불결하다", "음식이.입에.맞지.않는다", "물가가.비싸다",
"대중교통.이용이.불편하다", "택시기사.서비스가.불편하다","관광가이드의.서비스가.좋지.않다",
"쇼핑품목이.다양하지.못하다","상품구입을.강요한다","기타","불만족하거나.불편했던.점이.없다",
"언어소통이.불편하다")], id = "X")
ggplot(unliked.df)+
geom_bar(aes(x = X, y=value, fill = variable),
position = "fill", stat = "identity" )
unliked <- read.csv("체류기간-성별.csv", header=T)
setwd('C:/Users/jinxi/OneDrive/Desktop/191215/4. 체류기간, 숙박일수, 숙박장소')
unliked <- read.csv("체류기간-성별.csv", header=T)
unliked <- read.csv("여행불만족요인-성별.csv", header=T)
unliked
unliked.df <- melt( unliked[, c("X", "여행정보를.얻기.어렵다", "관광정보가.정확하지.않다", "관광종사원이.불친절하다",
"안내표지판이.부정확하다", "식당과.음식이.불결하다", "음식이.입에.맞지.않는다", "물가가.비싸다",
"대중교통.이용이.불편하다", "택시기사.서비스가.불편하다","관광가이드의.서비스가.좋지.않다",
"쇼핑품목이.다양하지.못하다","상품구입을.강요한다","기타","불만족하거나.불편했던.점이.없다",
"언어소통이.불편하다")], id = "X")
ggplot(unliked.df)+
geom_bar(aes(x = X, y=value, fill = variable),
position = "fill", stat = "identity" )
unliked <- read.csv("여행불만족요인-연령별.csv", header=T)
unliked
unliked.df <- melt( unliked[, c("X", "여행정보를.얻기.어렵다", "관광정보가.정확하지.않다", "관광종사원이.불친절하다",
"안내표지판이.부정확하다", "식당과.음식이.불결하다", "음식이.입에.맞지.않는다", "물가가.비싸다",
"대중교통.이용이.불편하다", "택시기사.서비스가.불편하다","관광가이드의.서비스가.좋지.않다",
"쇼핑품목이.다양하지.못하다","상품구입을.강요한다","기타","불만족하거나.불편했던.점이.없다",
"언어소통이.불편하다")], id = "X")
ggplot(unliked.df)+
geom_bar(aes(x = X, y=value, fill = variable),
position = "fill", stat = "identity" )
unliked <- read.csv("체류기간-여행형태별.csv", header=T)
unliked
unliked <- read.csv("체류기간-여행형태별.csv", header=T)
unliked <- read.csv("여행불만족요인-여행형태별.csv", header=T)
unliked
unliked.df <- melt( unliked[, c("X", "여행정보를.얻기.어렵다", "관광정보가.정확하지.않다", "관광종사원이.불친절하다",
"안내표지판이.부정확하다", "식당과.음식이.불결하다", "음식이.입에.맞지.않는다", "물가가.비싸다",
"대중교통.이용이.불편하다", "택시기사.서비스가.불편하다","관광가이드의.서비스가.좋지.않다",
"쇼핑품목이.다양하지.못하다","상품구입을.강요한다","기타","불만족하거나.불편했던.점이.없다",
"언어소통이.불편하다")], id = "X")
ggplot(unliked.df)+
geom_bar(aes(x = X, y=value, fill = variable),
position = "fill", stat = "identity" )
#
# day12_answer.R
#
# 워드클라우드 실습
#
#문1)
#20대 국회 개원 여·야 3당 대표 국회연설문에 대해 각각 워드클라우드를
#작성하시오.
#예제소스 파일은 ‘ex_10-1.txt’, ‘ex_10-2.txt’, ‘ex_10-3.txt’이다.
Sys.setenv( JAVA_HOME = 'C:/Program Files/Java/jre1.8.0_231' )
library( wordcloud )
library( KoNLP )
library( RColorBrewer )
setwd("d:./")
# ex_10-1.txt
text <- readLines( "ex_10-1.txt", encoding ="UTF-8" )
setwd("D:work123/R_report")
setwd("D:/work123/R_report")
# ex_10-1.txt
text <- readLines( "ex_10-1.txt", encoding ="UTF-8" )
text
buildDictionary( ext_dic = "woorimalsam" )
noun <- sapply( text, extractNoun, USE.NAMES = F )
noun
noun2 <- unlist(noun)
# 무의미한 단어 제거
noun2 <- noun2[ nchar(noun2) > 1 ]
noun2 <- gsub( "들이", "", noun2 )
noun2 <- gsub( "10", "", noun2 )
noun2 <- gsub( "이명", "", noun2 )
wordcount <- table( noun2 )
wordcloud2( wordcount,
size = 1.2, color = rep_len( c( 'red', 'steelblue'),
nrow( wordcount ) ),
shape = 'diamond' )
library( wordcloud )
library( KoNLP )
library( RColorBrewer )
wordcount <- table( noun2 )
wordcloud2( wordcount,
size = 1.2, color = rep_len( c( 'red', 'steelblue'),
nrow( wordcount ) ),
shape = 'diamond' )
library( wordcloud2 )
wordcloud2( wordcount,
size = 1.2, color = rep_len( c( 'red', 'steelblue'),
nrow( wordcount ) ),
shape = 'diamond' )
# ex_10-2.txt
useSejongDic()
text <- readLines( "ex_10-2.txt", encoding ="UTF-8" )
# ex_10-2.txt
useSejongDic()
text <- readLines( "ex_10-2.txt", encoding ="UTF-8" )
text
noun <- sapply( text, extractNoun, USE.NAMES = F )
noun
noun
# 단어 등록
add_words <- c( '새누리당', '부패', '비정상', '김영란법',
'원장님', '북한', '북한당국', '사드', '배치' )
buildDictionary( user_dic =
data.frame( add_words,rep( 'ncn', length( add_words ) ) ),
replace_usr_dic = T )
get_dictionary( 'user_dic' )
noun <- sapply( text, extractNoun, USE.NAMES = F )
noun
noun2 <- unlist(noun)
# 무의미한 단어 제거
noun2 <- noun2[ nchar(noun2) > 1 ]
del_words <- c( "누구", "하지", "이명", "여러분", "동지",
"발걸음", "시행", "입장", "심각", "상황",
"해서", "적극", "앞장", "보완", "진행",
"불구", "사실상" )
for ( str in del_words ) {
noun2 <- gsub( str, "", noun2 )
}
wordcount <- table( noun2 )
wordcloud2( wordcount,
size = 1.2, color = rep_len( c( 'red', 'steelblue'),
nrow( wordcount ) ),
shape = 'triangle' )
library(ggplot2)
library(reshape2)
setwd('D:/6-project/김신혁/191215/5. 관광만족도, 불만족요인')
liked <- read.csv("여행만족활동-국적별.csv", header=T)
liked <- read.csv("여행만족활동-국내외.csv", header=T)
liked
liked.df <- melt( liked[, c("X","한국", "외국")], id = "X")
ggplot(liked.df)+
geom_bar(aes(x = X, y=value, fill = variable),
position = "fill", stat = "identity" )
setwd('D:/6-project/김신혁/191215/5. 관광만족도, 불만족요인')
liked <- read.csv("여행만족활동-국내외.csv", header=T)
liked
liked
liked.df <- melt( liked[, c("X","자연경관감상", "식도락.맛집여행.", "산.오름.올레길.트레킹",
"쇼핑", "박물관.테마공원.방문", "회의.업무.컨벤션.세미나",
"공연.축제.이벤트.참여", "해변활동.해수욕.등.","유흥.오락.경마",
"전통문화체험", "종교.순례활동", "영화.드라마촬영지.방문",
"역사.문화유적지.방문", "레포츠.승마..골프..ATV.등.",
"미용.온천.스파.마사지.","기타")], id = "X")
ggplot(liked.df)+
geom_bar(aes(x = X, y=value, fill = variable),
position = "fill", stat = "identity" )
liked
liked <- read.csv("여행만족활동-국내외.csv", header=T)
liked
liked.df <- melt( liked[, c("X","자연경관감상", "식도락.맛집여행.", "산.오름.올레길.트레킹",
"쇼핑", "박물관.테마공원.방문", "회의.업무.컨벤션.세미나",
"공연.축제.이벤트.참여", "해변활동.해수욕.등.","유흥.오락.경마",
"전통문화체험", "종교.순례활동", "영화.드라마촬영지.방문",
"역사.문화유적지.방문", "레포츠.승마..골프..ATV.등.",
"미용.온천.스파.마사지.","기타")], id = "X")
ggplot(liked.df)+
geom_bar(aes(x = X, y=value, fill = variable),
position = "fill", stat = "identity" )
foreigners.month <- read.csv("외인 관광 현황 월단위 2015-2018.csv", header=T)
foreigners.month
setwd('D:/6-project/김신혁/191215/1. 관광객수')
foreigners.month <- read.csv("외인 관광 현황 월단위 2015-2018.csv", header=T)
foreigners.month
foreigners.month <- read.csv("외인 관광 월단위 2015-2018.csv", header=T)
foreigners.month
foreigners.month.df <- melt( foreigners.month[, c("구분", "일본", "중국", "홍콩", "대만",
"싱가폴", "말레이시아", "인도네시아", "베트남",
"아시아기타", "미국", "서구기타")], id = "구분")
foreigners.month.df
foreigners.month
ggplot(foreigners.month.df)+
geom_line( aes( x = 구분, y = value, color = variable, group = variable) )+
ggtitle("15-18년 월단위 제주 외인 관광객 수")+
xlab("연도") + ylab("관광객 방문수")
foreigners.month
foreigners.month.df
foreigners.month
## 숙박시설만족도-국적별
library(reshape2)
library(ggplot2)
hotel <- read.csv("숙박시설만족도-국적별.csv", header=T)
setwd('D:/6-project/김신혁/191215/5. 관광만족도, 불만족요인/숙박시설만족도')
hotel <- read.csv("숙박시설만족도-국적별.csv", header=T)
hotel
hotel
# 주행거리와 제동거리 사이의 회귀모델
str(cars)
head(cars)
# 산점도를 통한 선형 관계 확인
plot( dist~speed, data = cars)
plot( cars )
# 회귀모델 구하기
# 종속(반응)변수 ~ 독립(설명)변수 순서로 지정
model <- lm( dist~speed, cars )
medel
model
# 회귀선 그리기
abline(model)
coef( model )                       # 매개변수(계수) - w, b값 출력
cars
fitted( model )                     # 훈련 Data에 있는 샘플에 대한 예측값
residuals( model )                  # 잔차 : 회귀식으로 추정된 값과의 차이
# 잔차 제곱합을 평균제곱오차( MES; mean squared error )로 변환
deviance( model ) / length( speed ) #
# 잔차 제곱합을 평균제곱오차( MES; mean squared error )로 변환
deviance( model ) / length( cars$speed ) #
b <- coef(model)[1]
W <- coef(model)[2]
speed <- 21.5
dist <- W * speed + b
dist
df <- data.frame( speed = c( 21.5, 25.0, 25.5, 26.0,
26.5, 27.0, 27.5, 28.0 ) )
predict( model, df )
plot( df$speed, predict( model, df ), col = 'red', cex = 2, pch = 20)
abline( model )
fitted( model )                     # 훈련 Data에 있는 샘플에 대한 예측값
cars
# 산점도를 통한 선형 관계 확인
plot( dist~speed, data = cars )
plot( cars )
# 회귀모델 구하기
# 종속(반응)변수 ~ 독립(설명)변수 순서로 지정
model <- lm( dist~speed, cars )
model
# 회귀선 그리기
abline( model )
coef( model )                       # 매개변수(계수) - w, b값 출력
cars
fitted( model )                     # 훈련 Data에 있는 샘플에 대한 예측값
residuals( model )
speed <- cars[,1]
pred <- W * speed + b
pred
compare <- data.frame( pred, cars[,2],
pred-cars[,2] )
compare
colnames( compare ) <- c('예상','실제','오차')
head( fitted(model), 3)     # 예측
head( residuals(model), 3)  # 추정된 값과의 차이
head( compare, 3 )
summary(model)
#
str( cars )
head( cars )
car_model <- lm( dist~speed, data=cars)
coef(car_model)
plot(cars); abline(car_model,col='red')
summary(car_model)
coef(car_model)
plot(car_model); abline(car_model,col='red')
car_model <- lm( dist~speed, data=cars)
coef(car_model)
plot(car_model); abline(car_model,col='red')
car_model <- lm( dist~speed, data=cars)
coef(car_model)
plot(car_model); abline(car_model,col='red')
coef(women_model)
plot(women); abline(women_model,col='red')
women_model <- lm( weight~height, data=women )
coef(women_model)
plot(women)
abline(women_model,col='red')
summary(women_model)
#
str( cars )
hear( cars )
car_model <- lm( dist~speed, data=cars)
coef(car_model)
plot(car_model); abline(car_model,col='red')
coef(women_model)
plot(women)
abline(women_model,col='red')
summary(women_model)
#
str( cars )
hear( cars )
car_model <- lm( dist~speed, data=cars)
coef(car_model)
plot(car_model); abline(car_model,col='red')
car_model <- lm( dist~speed, data=cars)
coef(car_model)
plot(car_model); abline(car_model,col='red')
coef(women_model)
plot(women)
abline(women_model,col='red')
summary(women_model)
coef(women_model)
plot(women_model)
hear( women )
str( women )
hear( women )
women_model <- lm( weight~height, data=women )
coef(women_model)
plot(women_model)
head( cars )
car_model <- lm( dist~speed, data=cars)
coef(car_model)
plot(car_model); abline(car_model,col='red')
summary(car_model)
coef(car_model)
plot(car_model); abline(car_model,col='red')
head( cars )
car_model <- lm( dist~speed, data=cars)
coef(car_model)
plot(car_model)
summary(car_model)
str( women )
head( women )
women_model <- lm( weight~height, data=women )# y=weight, x=height 키가크면 몸무게가 많이 나간다
coef(women_model)
plot(women_model)
abline(women_model,col='red')
summary(women_model)
#
# * 실습 결과를 R Script file로 제출
# * R Script file 이름은 "영문본인이름_제출일날짜.R" 부여하여 제출
# * R Script file의 처음에 주석으로 본인 이름과 작성일/제출일 기록
#
# 문1)
# state.x77 데이터셋에서 문맹률(Illiteracy)을 이용해 범죄율(Murder)을 예측
# 하는 단순선형 회귀모델을 만드시오. 그리고 문맹률이 0.5, 1.0, 1.5일 때 범
# 죄율을 예측하여 보시오.
#
df <- data.frame(state.x77)
df
df$
re <- lm(Murder~Illiteracy, data = df)
#
# * 실습 결과를 R Script file로 제출
# * R Script file 이름은 "영문본인이름_제출일날짜.R" 부여하여 제출
# * R Script file의 처음에 주석으로 본인 이름과 작성일/제출일 기록
#
# 문1)
# state.x77 데이터셋에서 문맹률(Illiteracy)을 이용해 범죄율(Murder)을 예측
# 하는 단순선형 회귀모델을 만드시오. 그리고 문맹률이 0.5, 1.0, 1.5일 때 범
# 죄율을 예측하여 보시오.
#
df <- data.frame(state.x77)
re <- lm(Murder~Illiteracy, data = df)
re
model <- lm(Murder~Illiteracy, data = df)
predict(model, c(0.5, 1.0, 1.5))
test <- c(0.5, 1.0, 1.5)
predict(model, test)
test <- data.frame( Illiteracy = c(0.5, 1.0, 1.5) )
predict(model, test)
df <- data.frame(trees)
model <- lm(Volume~Girth, data = df)
test <- data.frame( Girth = c(8.5, 9.0, 9.5) )
predict(model,test)
model <- lm(pressure~temperature, data = df)
df <- data.frame(pressure)
model <- lm(pressure~temperature, data = df)
df
test <- data.frame( temperature = c(65, 95, 155) )
predict(model, test)
